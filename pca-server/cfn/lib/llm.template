AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon Transcribe Post Call Analytics - PCA Server - S3 Trigger

Transform: AWS::Serverless-2016-10-31

Parameters:
  LLMPromptBucket:
    Type: String
    Description: Existing bucket holding your generative AI prompts.

  LLMPromptBucketPrefix:
    Type: String
    Default: LLMPrompts
    Description: Prefix/Folder that holds the generative AI prompts.

  LLMPromptSummaryTemplateName:
    Type: String
    Description: The LLM summary prompt template name.

Resources:
  ConfigureBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: allow-s3-notification-config
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:ListBucket
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
              Resource:
                - !Sub arn:aws:s3:::${LLMPromptBucket}
                - !Sub arn:aws:s3:::${LLMPromptBucket}/*

  ConfigureBucketFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:  ../../src/llm
      Handler: llm_prompt_upload.lambda_handler
      Role: !GetAtt ConfigureBucketRole.Arn
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Environment:
        Variables:
          StackName: !Ref AWS::StackName

  ConfigureBucket:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt ConfigureBucketFunction.Arn
      BucketName: !Ref LLMPromptBucket
      Prefix: !Ref LLMPromptBucketPrefix
      ObjectName: !Ref LLMPromptSummaryTemplateName

