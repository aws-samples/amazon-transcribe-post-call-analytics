AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon Transcribe Post Call Analytics - PCA UI - Indexer

Transform: AWS::Serverless-2016-10-31

Parameters:
  DataBucket:
    Type: String

  DataPrefix:
    Type: String

  AudioBucket:
    Type: String

  AudioBucketPrefix:
    Type: String

  WebUri:
    Type: String

  StepFunctionName:
    Type: String
    Default: PostCallAnalyticsWorkflow
    Description: Name of Step Functions workflow that orchestrates this process

Resources:
  Queue:
    Type: "AWS::SQS::Queue"
    Properties:
      VisibilityTimeout: 300

  QueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues:
        - !Ref Queue
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action:
            - sqs:SendMessage
          Resource: !GetAtt Queue.Arn
          Condition:
            ArnLike:
              aws:SourceArn: !Sub arn:aws:s3:::${DataBucket}

  ConfigureDataBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: allow-s3-notification-config
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:GetBucketNotification
                - s3:PutBucketNotification
              Resource: !Sub arn:aws:s3:::${DataBucket}
        - PolicyName: set-audio-bucket-cors
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:PutBucketCORS
              Resource: !Sub arn:aws:s3:::${AudioBucket}

  ConfigureDataBucketFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:  ../../src/lambda
      Handler: bucket.handler
      Runtime: nodejs14.x
      Role: !GetAtt ConfigureDataBucketRole.Arn
      Environment:
        Variables:
          StackName: !Ref AWS::StackName

  ConfigureDataBucket:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt ConfigureDataBucketFunction.Arn
      BucketName: !Ref DataBucket
      Prefix: !Ref DataPrefix
      QueueArn: !GetAtt Queue.Arn
      AudioBucket: !Ref AudioBucket
      AudioBucketPrefix: !Ref AudioBucketPrefix
      WebUri: !Ref WebUri

  Table:
    Type: "AWS::DynamoDB::Table"
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: TK
          AttributeType: 'N'
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: SK
              KeyType: HASH
            - AttributeName: TK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: True

  IndexFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri:  ../../src/lambda
      Handler: index.handler
      Timeout: 300
      Environment:
        Variables:
          TableName: !Ref Table
      Events:
        QueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt Queue.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - S3ReadPolicy:
            BucketName: !Ref DataBucket
      Runtime: nodejs14.x

  InputBucketTriggerFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri:  ../../src/lambda
      Handler: input_bucket_trigger.handler
      Timeout: 300
      Environment:
        Variables:
          TableName: !Ref Table
          AudioBucketPrefix: !Ref AudioBucketPrefix
          DataPrefix: !Ref DataPrefix
      Events:
        StandardEventBridge:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - "Object Created"
              source:
                - aws.s3
              detail:
                bucket:
                  name:
                    - !Ref AudioBucket
        StepFunctionChange:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - "aws.states"
              detail-type:
                - "Step Functions Execution Status Change"
              detail:
                stateMachineArn:
                  - !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${StepFunctionName}
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref Table
      - S3ReadPolicy:
          BucketName: !Ref AudioBucket
      - Statement:
        - Effect: "Allow"
          Action: 
            - "states:GetExecutionHistory"
          Resource: 
          - !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:execution:${StepFunctionName}:*
      Runtime: nodejs14.x

Outputs:
  TableName:
    Value: !Ref Table

  RolesForKMSKey:
    Value: !Join
      - ', '
      - - !Sub '"${IndexFunctionRole.Arn}"'
        - !Sub '"${ConfigureDataBucketRole.Arn}"'