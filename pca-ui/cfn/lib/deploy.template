AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon Transcribe Post Call Analytics - PCA UI - Deploy

Parameters:
  Bucket:
    Type: String

  QAppWebURL:
    Type: String

  QWebExperienceId: 
    Type: String
  
  QAppId: 
    Type: String

  WebUri:
    Type: String

  AudioBucket:
    Type: String

  AuthUri:
    Type: String

  AuthClientId:
    Type: String

  ApiUri:
    Type: String

  DeployCountName:
    Type: AWS::SSM::Parameter::Name

  DeployCountValue:
    Type: AWS::SSM::Parameter::Value<String>

  EnableGenAIQuery:
    Type: String
    AllowedValues: [true, false]
    Description: true or false to enable or disable the genai query prompt

Resources:
  Layer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - nodejs18.x
      Content: ../../src/witch/witch.zip

  Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: allow-s3-put
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:aws:s3:::${Bucket}/*
        - PolicyName: allow-ssm-param
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:PutParameter
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${DeployCountName}"

  DeployFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ../../src/www/build
      Environment:
        Variables:
          BUCKET: !Ref Bucket
          COUNTER: !Ref DeployCountName
      Handler: witch.staticHandler
      Layers:
        - !Ref Layer
      Role: !GetAtt Role.Arn
      Runtime: nodejs18.x
      Timeout: 300

  ConfigureFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ../../src/lambda
      Handler: config.handler
      Role: !GetAtt Role.Arn
      Runtime: nodejs18.x

  Deploy:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt DeployFunction.Arn
      Counter: !Ref DeployCountValue
      Version: "0.7.9"

  Configure:
    Type: "AWS::CloudFormation::CustomResource"
    DependsOn: Deploy
    Properties:
      Bucket: !Ref Bucket
      AudioBucket: !Ref AudioBucket
      ServiceToken: !GetAtt ConfigureFunction.Arn
      AuthUri: !Ref AuthUri
      AuthClientId: !Ref AuthClientId
      ApiUri: !Ref ApiUri
      Region: !Ref AWS::Region
      GenAIQuery: !Ref EnableGenAIQuery
      QAppWebURL: !Ref QAppWebURL
      Version: "0.7.9"

  QUpdateWebExperienceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: update-web-experience
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - qbusiness:UpdateWebExperience
              Resource: "*"

  QUpdateWebExperienceFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Environment:
        Variables:
          Q_WEB_EXPERIENCE_ID: !Ref QWebExperienceId
          Q_APPLICATION_ID: !Ref QAppId
          PCA_WEB_URI: !Ref WebUri
      Handler: index.lambda_handler
      Role: !GetAtt QUpdateWebExperienceRole.Arn
      Runtime: python3.11
      Timeout: 900
      Code:
        ZipFile: |
          import boto3
          import os
          import json
          import urllib.parse
          import cfnresponse

          client = boto3.client('qbusiness')

          Q_WEB_EXPERIENCE_ID = os.getenv('Q_WEB_EXPERIENCE_ID','')
          Q_APPLICATION_ID = os.getenv('Q_APPLICATION_ID', '')
          PCA_WEB_URI = os.getenv('PCA_WEB_URI', '')

          def update_web_experience():
              try:
                  response = client.update_web_experience(
                      applicationId=Q_APPLICATION_ID,
                      webExperienceId=Q_WEB_EXPERIENCE_ID,
                      authenticationConfiguration={
                          'allowedDomainOrigins': [PCA_WEB_URI]
                      }
                  )
                  return response
              except client.exceptions.ResourceNotFoundException as e:
                  print(f"Resource not found: {e}")
              except client.exceptions.ValidationException as e:
                  print(f"Validation error: {e}")
              except client.exceptions.AccessDeniedException as e:
                  print(f"Access denied: {e}")
              except client.exceptions.ThrottlingException as e:
                  print(f"Throttling error: {e}")
              except client.exceptions.InternalServerException as e:
                  print(f"Internal server error: {e}")
              except Exception as e:
                  print(f"An unexpected error occurred: {e}")

              return None

          def lambda_handler(event, context):
              response_data = {}

              try:
                  update_web_experience()
                  cfnresponse.send(event,
                                  context,
                                  cfnresponse.SUCCESS,
                                  response_data)

              except Exception as e:
                  print("Operation failed...")
                  print(str(e))
                  response_data['Data'] = str(e)
                  cfnresponse.send(event,
                                  context,
                                  cfnresponse.FAILED,
                                  response_data)        

  QUpdateWebExperience:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt QUpdateWebExperienceFunction.Arn
      Counter: !Ref DeployCountValue
      Version: "0.7.9"

Outputs:

  RolesForKMSKey:
    Value: !Join
      - ', '
      - - !Sub '"${Role.Arn}"'