AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: Amazon Transcribe Post Call Analytics - PCA UI - Deploy

Parameters:
  Bucket:
    Type: String

  QAppWebURL:
    Type: String

  QWebExperienceId: 
    Type: String
  
  QAppId: 
    Type: String

  WebUri:
    Type: String

  AudioBucket:
    Type: String

  AuthUri:
    Type: String

  AuthClientId:
    Type: String

  ApiUri:
    Type: String

  DeployCountName:
    Type: AWS::SSM::Parameter::Name

  DeployCountValue:
    Type: AWS::SSM::Parameter::Value<String>

  EnableGenAIQuery:
    Type: String
    AllowedValues: [true, false]
    Description: true or false to enable or disable the genai query prompt

  CloudWatchLogsExpirationInDays:
    Type: Number
    Default: 14
    Description: The number of days log events are kept in CloudWatch Logs.

Resources:
  Layer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - nodejs18.x
      Content: ../../src/witch/witch.zip

  Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: allow-s3-put
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:aws:s3:::${Bucket}/*
        - PolicyName: allow-ssm-param
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:PutParameter
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${DeployCountName}"

  DeployFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ../../src/www/build
      Environment:
        Variables:
          BUCKET: !Ref Bucket
          COUNTER: !Ref DeployCountName
      Handler: witch.staticHandler
      Layers:
        - !Ref Layer
      Role: !GetAtt Role.Arn
      Runtime: nodejs18.x
      Timeout: 300

  ConfigureFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ../../src/lambda
      Handler: config.handler
      Role: !GetAtt Role.Arn
      Runtime: nodejs18.x

  Deploy:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt DeployFunction.Arn
      Counter: !Ref DeployCountValue
      Version: "0.7.9"

  Configure:
    Type: "AWS::CloudFormation::CustomResource"
    DependsOn: Deploy
    Properties:
      Bucket: !Ref Bucket
      AudioBucket: !Ref AudioBucket
      ServiceToken: !GetAtt ConfigureFunction.Arn
      AuthUri: !Ref AuthUri
      AuthClientId: !Ref AuthClientId
      ApiUri: !Ref ApiUri
      Region: !Ref AWS::Region
      GenAIQuery: !Ref EnableGenAIQuery
      QAppWebURL: !Ref QAppWebURL
      Version: "0.7.9"

##########################################################################
# CodeBuild
##########################################################################

  PCAUICodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: "*"
                Effect: Allow
                Action:
                  - qbusiness:UpdateWebExperience

  PCAUICodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: !Sub >-
        Builds docker images and the website of stack: ${AWS::StackName}
      ServiceRole: !Ref PCAUICodeBuildServiceRole
      EncryptionKey: alias/aws/s3
      Artifacts:
        Type: NO_ARTIFACTS
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo ${Q_WEB_EXPERIENCE_ID}
                - echo `ls -altr`
                - echo `pwd`
            build:
              commands:
                - echo Build started on `date`
            post_build:
              commands:
                - echo Build completed on `date`
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: Q_WEB_EXPERIENCE_ID  
            Value: !Ref QWebExperienceId
          - Name: Q_APPLICATION_ID
            Value: !Ref QAppId
          - Name: PCA_WEB_URI
            Value: !Ref WebUri
      TimeoutInMinutes: 10

  LambdaCodeBuildStartBuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !GetAtt PCAUICodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
          # Used by custom resource helper poller
          # https://github.com/aws-cloudformation/custom-resource-helper
        - PolicyName: CustomResourcePoller
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:
                  - !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/*"
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:*"

  CodeBuildRun:
    Type: Custom::CodeBuildRun
    Properties:
      ServiceToken: !GetAtt LambdaCodeBuildStartBuild.Arn
      BuildProjectName: !Ref PCAUICodeBuildProject

  LambdaCodeBuildStartBuild:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaCodeBuildStartBuildExecutionRole.Arn
      Runtime: python3.12
      Timeout: 60
      MemorySize: 128
      Handler: lambda_start_codebuild.handler
      CodeUri: ../../src/qbusiness/start_codebuild
      Description: This AWS Lambda Function kicks off a code build job.
      LoggingConfig:
        LogGroup:
          Fn::Sub: /${AWS::StackName}/lambda/LambdaCodeBuildStartBuild
    DependsOn:
      - LambdaCodeBuildStartBuildLogGroup

  LambdaCodeBuildStartBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /${AWS::StackName}/lambda/LambdaCodeBuildStartBuild
      RetentionInDays:
        Ref: CloudWatchLogsExpirationInDays


Outputs:

  RolesForKMSKey:
    Value: !Join
      - ', '
      - - !Sub '"${Role.Arn}"'